apiVersion: cluster.x-k8s.io/v1beta1
kind: ClusterClass
metadata:
  name: quick-start
spec:
  controlPlane:
    ref:
      apiVersion: controlplane.cluster.x-k8s.io/v1beta1
      kind: KubeadmControlPlaneTemplate
      name: quick-start-control-plane
    machineInfrastructure:
      ref:
        kind: AWSMachineTemplate
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
        name: quick-start-control-plane
  infrastructure:
    ref:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
      kind: AWSClusterTemplate
      name: quick-start
  workers:
    machineDeployments:
      - class: default-worker
        template:
          bootstrap:
            ref:
              apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
              kind: KubeadmConfigTemplate
              name: quick-start-worker-bootstraptemplate
          infrastructure:
            ref:
              apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
              kind: AWSMachineTemplate
              name: quick-start-worker-machinetemplate
  variables:
    - name: region
      required: true
      schema:
        openAPIV3Schema:
          type: string
          default: us-east-1
    - name: sshKeyName
      required: true
      schema:
        openAPIV3Schema:
          type: string
          default: default
    - name: controlPlaneMachineType
      required: true
      schema:
        openAPIV3Schema:
          type: string
          default: t3.large
    - name: workerMachineType
      required: true
      schema:
        openAPIV3Schema:
          type: string
          default: t3.large
  patches:
    - name: region
      definitions:
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
            kind: AWSClusterTemplate
            matchResources:
              infrastructureCluster: true
          jsonPatches:
            - op: add
              path: /spec/template/spec/region
              valueFrom:
                variable: region
    - name: sshKeyName
      definitions:
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
            kind: AWSClusterTemplate
            matchResources:
              infrastructureCluster: true
          jsonPatches:
            - op: add
              path: /spec/template/spec/sshKeyName
              valueFrom:
                variable: sshKeyName
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
            kind: AWSMachineTemplate
            matchResources:
              controlPlane: true
              machineDeploymentClass:
                names:
                  - default-worker
          jsonPatches:
            - op: add
              path: /spec/template/spec/sshKeyName
              valueFrom:
                variable: sshKeyName
    - name: controlPlaneMachineType
      definitions:
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
            kind: AWSMachineTemplate
            matchResources:
              controlPlane: true
          jsonPatches:
            - op: replace
              path: /spec/template/spec/instanceType
              valueFrom:
                variable: controlPlaneMachineType
    - name: workerMachineType
      definitions:
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
            kind: AWSMachineTemplate
            matchResources:
              machineDeploymentClass:
                names:
                  - default-worker
          jsonPatches:
            - op: replace
              path: /spec/template/spec/instanceType
              valueFrom:
                variable: workerMachineType
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: AWSClusterTemplate
metadata:
  name: quick-start
spec:
  template:
    spec: {}
---
kind: KubeadmControlPlaneTemplate
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
metadata:
  name: quick-start-control-plane
spec:
  template:
    spec:
      kubeadmConfigSpec:
        clusterConfiguration:
          apiServer:
            extraArgs:
              cloud-provider: aws
          controllerManager:
            extraArgs:
              cloud-provider: aws
        initConfiguration:
          nodeRegistration:
            name: "{{ ds.meta_data.local_hostname }}"
            kubeletExtraArgs:
              cloud-provider: aws
        joinConfiguration:
          nodeRegistration:
            name: "{{ ds.meta_data.local_hostname }}"
            kubeletExtraArgs:
              cloud-provider: aws
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: AWSMachineTemplate
metadata:
  name: quick-start-control-plane
spec:
  template:
    spec:
      # instanceType is a required field (OpenAPI schema).
      instanceType: REPLACEME
      iamInstanceProfile: "control-plane.cluster-api-provider-aws.sigs.k8s.io"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: AWSMachineTemplate
metadata:
  name: quick-start-worker-machinetemplate
spec:
  template:
    spec:
      # instanceType is a required field (OpenAPI schema).
      instanceType: REPLACEME
      iamInstanceProfile: "nodes.cluster-api-provider-aws.sigs.k8s.io"
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: "quick-start-worker-bootstraptemplate"
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          name: "{{ ds.meta_data.local_hostname }}"
          kubeletExtraArgs:
            cloud-provider: aws
---
apiVersion: v1
data:
  kindnet.yaml: |
    # kindnetd networking manifest
    ---
    kind: ClusterRole
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: kindnet
    rules:
      - apiGroups:
          - ""
        resources:
          - nodes
        verbs:
          - list
          - watch
          - patch
      - apiGroups:
          - ""
        resources:
          - configmaps
        verbs:
          - get
    ---
    kind: ClusterRoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: kindnet
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: kindnet
    subjects:
      - kind: ServiceAccount
        name: kindnet
        namespace: kube-system
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: kindnet
      namespace: kube-system
    ---
    apiVersion: apps/v1
    kind: DaemonSet
    metadata:
      name: kindnet
      namespace: kube-system
      labels:
        tier: node
        app: kindnet
        k8s-app: kindnet
    spec:
      selector:
        matchLabels:
          app: kindnet
      template:
        metadata:
          labels:
            tier: node
            app: kindnet
            k8s-app: kindnet
        spec:
          hostNetwork: true
          tolerations:
            - operator: Exists
              effect: NoSchedule
          serviceAccountName: kindnet
          containers:
            - name: kindnet-cni
              image: kindest/kindnetd:v20230330-48f316cd
              env:
                - name: HOST_IP
                  valueFrom:
                    fieldRef:
                      fieldPath: status.hostIP
                - name: POD_IP
                  valueFrom:
                    fieldRef:
                      fieldPath: status.podIP
                - name: POD_SUBNET
                  value: '192.168.0.0/16'
              volumeMounts:
                - name: cni-cfg
                  mountPath: /etc/cni/net.d
                - name: xtables-lock
                  mountPath: /run/xtables.lock
                  readOnly: false
                - name: lib-modules
                  mountPath: /lib/modules
                  readOnly: true
              resources:
                requests:
                  cpu: "100m"
                  memory: "50Mi"
                limits:
                  cpu: "100m"
                  memory: "50Mi"
              securityContext:
                privileged: false
                capabilities:
                  add: ["NET_RAW", "NET_ADMIN"]
          volumes:
            - name: cni-bin
              hostPath:
                path: /opt/cni/bin
                type: DirectoryOrCreate
            - name: cni-cfg
              hostPath:
                path: /etc/cni/net.d
                type: DirectoryOrCreate
            - name: xtables-lock
              hostPath:
                path: /run/xtables.lock
                type: FileOrCreate
            - name: lib-modules
              hostPath:
                path: /lib/modules
kind: ConfigMap
metadata:
  name: cni-${CLUSTER_NAME}-crs-0
---
apiVersion: addons.cluster.x-k8s.io/v1beta1
kind: ClusterResourceSet
metadata:
  name: ${CLUSTER_NAME}-crs-0
spec:
  clusterSelector:
    matchLabels:
      cni: ${CLUSTER_NAME}-crs-0
  resources:
    - kind: ConfigMap
      name: cni-${CLUSTER_NAME}-crs-0
  strategy: ApplyOnce
