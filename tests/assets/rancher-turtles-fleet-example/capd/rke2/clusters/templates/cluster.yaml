{{- $cluster_name := printf "%s-%s" .Values.clustername_prefix (randAlphaNum 4) | lower -}}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: DockerCluster
metadata:
  name: {{ $cluster_name }}
  annotations:
    "helm.sh/resource-policy": keep
spec:
  loadBalancer:
    customHAProxyConfigTemplateRef:
      name: docker-rke2-lb-config
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: {{ $cluster_name }}
  annotations:
    cluster-api.cattle.io/upstream-system-agent: "true"
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
      - 10.1.0.0/16
    serviceDomain: cluster.local
    services:
      cidrBlocks:
      - 10.10.0.0/16
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: RKE2ControlPlane
    name: {{ $cluster_name }}-control-plane
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: DockerCluster
    name: {{ $cluster_name }}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: DockerMachineTemplate
metadata:
  name: {{ $cluster_name }}-control-plane
spec:
  template:
    spec:
      customImage: kindest/node:v1.31.4
      bootstrapTimeout: 15m
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: RKE2ControlPlane
metadata:
  name: {{ $cluster_name }}-control-plane
  annotations:
    "helm.sh/resource-policy": keep
spec: 
  replicas: 3
  rolloutStrategy:
    rollingUpdate:
      maxSurge: 1
    type: RollingUpdate
  serverConfig:
    cloudProviderName: external
    cni: calico
    kubeAPIServer:
      extraArgs:
      - --anonymous-auth=true
    disableComponents:
      pluginComponents:
        - rke2-ingress-nginx
      kubernetesComponents:
      - cloudController
    etcd:
      backupConfig:
        scheduleCron: '*/5 * * * *'
        retention: "1"
  agentConfig:
    nodeAnnotations:
      test: "true"
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: DockerMachineTemplate
      name:  {{ $cluster_name }}-control-plane
    nodeDrainTimeout: 30s
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: DockerMachineTemplate
    name:  {{ $cluster_name }}-control-plane
  nodeDrainTimeout: 30s
  version: v1.31.7+rke2r1
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: DockerMachineTemplate
metadata:
  name: {{ $cluster_name }}-md-0
spec:
  template:
    spec:
      customImage: kindest/node:v1.31.4
      bootstrapTimeout: 15m
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: RKE2ConfigTemplate
metadata:
  name: {{ $cluster_name }}-md-0
spec: {}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: {{ $cluster_name }}-md-0
  annotations:
    "helm.sh/resource-policy": keep
spec:
  clusterName: {{ $cluster_name }}
  replicas: 2
  selector:
    cluster.x-k8s.io/cluster-name: {{ $cluster_name }}
  template:
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: RKE2ConfigTemplate
          name: {{ $cluster_name }}-md-0
      clusterName: {{ $cluster_name }}
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: DockerMachineTemplate
        name: {{ $cluster_name }}-md-0
      version: v1.31.7+rke2r1
